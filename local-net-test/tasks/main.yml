---

- name: making sure data and base directories exists
  become: yes
  file:
    path: "{{ item.path }}"
    state: directory 
    mode: 0766
    owner: '{{ansible_user}}'
    group: '{{ansible_user}}'
  with_items: "{{ directories }}"

- name: Copy genesis file [node one]
  become: yes
  template:
    src: genesis.j2
    dest: "{{ srv }}/node_one/genesis.json"
    mode: 0766
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'

- name: Copy genesis file [node two]
  become: yes
  template:
    src: genesis.j2
    dest: "{{ srv }}/node_two/genesis.json"
    mode: 0766
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'

- name: Create a network
  docker_network:
    name: sur

- name: Re-create sur container
  # become: yes
  docker_container:
    name: sur1
    image: surblockchain/sur:latest
    state: started
    restart_policy: always
    # entrypoint: "bin/besu  --bootnodes={{bootnode}}"
    env:
      BESU_BOOTNODES: '{{ bootnodes }}'
      BESU_P2P_HOST: '{{ localhost }}'
    ports:
      - 30301:30303/udp
      - 8541:8545
    restart: yes
    recreate: yes
    volumes:
      - "{{node_one}}:/opt/sur/externalVolume"
    networks:
      - name: "sur"


- name: Re-create sur container
  # become: yes
  docker_container:
    name: sur2
    image: surblockchain/sur:latest
    state: started
    restart_policy: always
    # entrypoint: "bin/besu  --bootnodes={{bootnode}}"
    env:
      # BESU_BOOTNODES: '{{bootnodes}}'
      BESU_P2P_HOST: '{{ localhost }}'
    ports:
      - 30302:30303/udp
      - 8542:8545
    restart: yes
    recreate: yes
    volumes:
      - "{{node_two}}:/opt/sur/externalVolume"
    networks:
      - name: "sur"


